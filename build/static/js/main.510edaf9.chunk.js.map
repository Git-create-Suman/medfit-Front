{"version":3,"sources":["store/tasks.slice.js","components/Task/Task.js","components/Tasklist/TaskList.js","shared/useForm.js","shared/AddTaskFormValidationRules.js","components/Add-Task/AddTask.js","App.js","store/rootReducer.js","store/index.js","index.js"],"names":["taskSlice","createSlice","name","initialState","id","description","time","isComplete","reducers","addItemTotask","state","payload","unshift","updateItemInTask","index","findIndex","item","splice","removeItemFromtask","actions","Task","task","useState","setTime","setIsComplete","dispatch","useDispatch","useEffect","interval","setInterval","clearInterval","checkboxHandeler","className","onClick","type","onChange","checked","TaskList","tasks","useSelector","map","useForm","callback","validate","values","setValues","errors","setErrors","isSubmitting","setIsSubmitting","console","log","Object","keys","length","handleChange","event","target","value","handleSubmit","preventDefault","AddTask","Math","random","toString","slice","noValidate","onSubmit","htmlFor","required","placeholder","App","rootReducer","combineReducers","taskReducer","store","configureStore","reducer","rootElement","document","getElementById","ReactDOM","render"],"mappings":"4LAYMA,EAAYC,YAAY,CAC5BC,KAAM,OACNC,aAZmB,CACnB,CACEC,GAAI,YACJC,YAAa,mBACbC,KAAM,EACNC,YAAY,GAEd,CAAEH,GAAI,YAAaC,YAAa,cAAeC,KAAM,EAAGC,YAAY,IAMpEC,SAAU,CACRC,cADQ,SACMC,EADN,GAC2B,IAAZC,EAAW,EAAXA,QACrBD,EAAME,QAAQD,IAEhBE,iBAJQ,SAISH,EAJT,GAI8B,IAAZC,EAAW,EAAXA,QAClBG,EAAQJ,EAAMK,WAAU,SAACC,GAAD,OAAUA,EAAKZ,KAAOO,EAAQP,MAC5DM,EAAMO,OAAOH,EAAO,EAAGH,IAEzBO,mBARQ,SAQWR,EARX,GAQgC,IAAZC,EAAW,EAAXA,QAEpBG,EAAQJ,EAAMK,WAAU,SAACC,GAAD,OAAUA,EAAKZ,KAAOO,EAAQP,MAC5DM,EAAMO,OAAOH,EAAO,OAKnB,EAIHd,EAAUmB,QAHZV,EADK,EACLA,cACAS,EAFK,EAELA,mBACAL,EAHK,EAGLA,iBAEab,IAAf,Q,OCoCeoB,MArEf,YAAyB,IAATC,EAAQ,EAARA,KACd,EAAwBC,mBAASD,EAAKf,MAAtC,mBAAOA,EAAP,KAAaiB,EAAb,KACA,EAAoCD,mBAASD,EAAKd,YAAlD,mBAAOA,EAAP,KAAmBiB,EAAnB,KACMC,EAAWC,cAEjBC,qBAAU,WACR,IAAKpB,EAAY,CACf,IAAMqB,EAAWC,aAAY,WACvBvB,EAAO,EACTiB,GAAQ,SAACjB,GAAD,OAAUA,EAAO,MAEzBkB,GAAc,GACdC,EAASZ,EAAiB,2BAAKQ,GAAN,IAAYd,aAAYD,WACjDwB,cAAcF,MAEf,KACH,OAAO,kBAAME,cAAcF,OAE5B,CAACrB,EAAYD,EAAMmB,EAAUJ,IAEhC,IAIMU,EAAmB,WACvBP,GAAc,GACdD,EAAQ,GACRE,EAASZ,EAAiB,2BAAKQ,GAAN,IAAYd,aAAYD,YAGnD,OACE,8BACE,sBACE0B,UAAS,gBAAWzB,EAAa,gBAAkB,gBAA1C,KADX,UAGE,qBAAKyB,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,cAAf,SACE,wBAAOA,UAAU,qBAAqBC,QAASF,EAA/C,UACE,uBACEG,KAAK,WACLC,SAAUJ,EACVK,QAAS7B,IAEX,sBAAMyB,UAAU,mBAGpB,qBAAKA,UAAU,cAAf,SACE,sBAAMA,UAAU,GAAhB,SAAoBX,EAAKhB,gBAE3B,qBAAK2B,UAAU,QAAf,SACE,wBAAQE,KAAK,SAASF,UAAU,QAAQC,QA/B9B,WACpBR,EAASP,EAAmBG,EAAKjB,MA8BvB,SACE,sBAAM,cAAY,OAAlB,4BAMNG,GACA,gCACE,uBACA,oBAAGyB,UAAU,OAAb,+BAAuC1B,cC9CpC+B,MAbf,WACE,IAAMC,EAAQC,aAAY,SAAC7B,GAAD,OAAWA,EAAM4B,SAC3C,OACE,qBAAKN,UAAU,SAAf,SACE,qBAAKA,UAAU,gCAAf,SACGM,EAAME,KAAI,SAACnB,EAAMP,GAAP,OACT,cAAC,EAAD,CAAMO,KAAMA,GAAWA,EAAKjB,Y,OC0BvBqC,EAnCC,SAACC,EAAUC,GACzB,MAA4BrB,mBAAS,CAAEjB,YAAa,GAAIC,KAAM,KAA9D,mBAAOsC,EAAP,KAAeC,EAAf,KACA,EAA4BvB,mBAAS,IAArC,mBAAOwB,EAAP,KAAeC,EAAf,KACA,EAAwCzB,oBAAS,GAAjD,mBAAO0B,EAAP,KAAqBC,EAArB,KAEAtB,qBAAU,WACRuB,QAAQC,IAAIL,GACuB,IAA/BM,OAAOC,KAAKP,GAAQQ,QAAgBN,GACtCN,MAED,CAACI,IAiBJ,MAAO,CACLS,aATmB,SAACC,GACpBX,GAAU,SAACD,GAAD,mBAAC,eACNA,GADK,kBAEPY,EAAMC,OAAOvD,KAAOsD,EAAMC,OAAOC,WAEpCR,QAAQC,IAAIP,IAKZe,aAjBmB,SAACH,GAChBA,GAAOA,EAAMI,iBACjBV,QAAQC,IAAI,aACZJ,EAAUJ,EAASC,IACnBK,GAAgB,IAchBL,SACAE,WCjCW,SAASH,EAASC,GAC/B,IAAIE,EAAS,GAOb,OANKF,EAAOvC,cACVyC,EAAOzC,YAAc,2BAElBuC,EAAOtC,OACVwC,EAAOxC,KAAO,wBAETwC,EC4EMe,MA9Ef,WACE,IAAMpC,EAAWC,cAejB,EAAuDe,GAbvD,WAEEhB,EACEhB,EAAc,2BACTmC,GADQ,IAEXrC,YAAY,EACZH,GAAI0D,KAAKC,SAASC,SAAS,IAAIC,MAAM,OAGzCV,EAAa,CAAEE,OAAQ,CAAEC,MAAO,GAAIxD,KAAM,iBAC1CqD,EAAa,CAAEE,OAAQ,CAAEC,MAAO,GAAIxD,KAAM,YAK1CyC,GAFMC,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,OAAQS,EAAxB,EAAwBA,aAAcI,EAAtC,EAAsCA,aAKtC,OACE,qBAAK3B,UAAU,0BAAf,SACE,qBAAKA,UAAU,YAAf,SACE,8BACE,sBAAMA,UAAU,mBAAmBkC,YAAU,EAACC,SAAUR,EAAxD,SACE,sBAAK3B,UAAU,WAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,uBAAOoC,QAAQ,cAAf,yBACA,uBACEhE,GAAG,cACHiE,UAAQ,EACRnC,KAAK,OACLF,UAAS,wBACPc,EAAOzC,aAAe,YAExBH,KAAK,cACLoE,YAAY,cACZZ,MAAOd,EAAOvC,YACd8B,SAAUoB,IAEZ,qBAAKvB,UAAU,mBAAf,SACGc,EAAOzC,aACN,mBAAG2B,UAAU,iBAAb,SAA+Bc,EAAOzC,mBAI5C,sBAAK2B,UAAU,gBAAf,UACE,uBAAOoC,QAAQ,cAAf,sBACA,uBACEhE,GAAG,OACHiE,UAAQ,EACRnC,KAAK,SACLF,UAAS,wBAAmBc,EAAOxC,MAAQ,YAC3CJ,KAAK,OACLoE,YAAY,WACZZ,MAAOd,EAAOtC,KACd6B,SAAUoB,IAEZ,qBAAKvB,UAAU,mBAAf,SACGc,EAAOxC,MACN,mBAAG0B,UAAU,iBAAb,SAA+Bc,EAAOxC,YAI5C,qBAAK0B,UAAU,mBAAf,SACE,wBAAQE,KAAK,SAASF,UAAU,6BAAhC,+B,MCjDDuC,MAnBf,WACE,OACE,qBAAKvC,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,qBAAKA,UAAU,6BAAf,SACE,qBAAKA,UAAU,QAAf,SACE,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,aAAf,UACE,mDACA,cAAC,EAAD,IACA,cAAC,EAAD,kB,OCZHwC,EAAcC,YAAgB,CAAEnC,MAAOoC,ICEvCC,EAAQC,YAAe,CAAEC,QAASL,ICGzCM,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJG,K","file":"static/js/main.510edaf9.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = [\r\n  {\r\n    id: \"12gujh122\",\r\n    description: \"Learn Javascript\",\r\n    time: 0,\r\n    isComplete: true\r\n  },\r\n  { id: \"12gujh232\", description: \"Learn React\", time: 5, isComplete: false }\r\n];\r\n\r\nconst taskSlice = createSlice({\r\n  name: \"task\",\r\n  initialState,\r\n  reducers: {\r\n    addItemTotask(state, { payload }) {\r\n      state.unshift(payload);\r\n    },\r\n    updateItemInTask(state, { payload }) {\r\n      const index = state.findIndex((item) => item.id === payload.id);\r\n      state.splice(index, 1, payload);\r\n    },\r\n    removeItemFromtask(state, { payload }) {\r\n      //   console.log(payload);\r\n      const index = state.findIndex((item) => item.id === payload.id);\r\n      state.splice(index, 1);\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  addItemTotask,\r\n  removeItemFromtask,\r\n  updateItemInTask\r\n} = taskSlice.actions;\r\nexport default taskSlice.reducer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateItemInTask, removeItemFromtask } from \"../../store/tasks.slice\";\r\nfunction Task({ task }) {\r\n  const [time, setTime] = useState(task.time);\r\n  const [isComplete, setIsComplete] = useState(task.isComplete);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!isComplete) {\r\n      const interval = setInterval(() => {\r\n        if (time > 0) {\r\n          setTime((time) => time - 1);\r\n        } else {\r\n          setIsComplete(true);\r\n          dispatch(updateItemInTask({ ...task, isComplete, time }));\r\n          clearInterval(interval);\r\n        }\r\n      }, 1000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [isComplete, time, dispatch, task]);\r\n\r\n  const removeHandler = () => {\r\n    dispatch(removeItemFromtask(task.id));\r\n  };\r\n\r\n  const checkboxHandeler = () => {\r\n    setIsComplete(true);\r\n    setTime(0);\r\n    dispatch(updateItemInTask({ ...task, isComplete, time }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className={`alert ${isComplete ? \"alert-success\" : \"alert-warning\"} `}\r\n      >\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-1  mb-2\">\r\n              <label className=\"checkbox-container\" onClick={checkboxHandeler}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  onChange={checkboxHandeler}\r\n                  checked={isComplete}\r\n                />\r\n                <span className=\"checkmark\"></span>\r\n              </label>\r\n            </div>\r\n            <div className=\"col-10 mb-2\">\r\n              <span className=\"\">{task.description}</span>\r\n            </div>\r\n            <div className=\"col-1\">\r\n              <button type=\"button\" className=\"close\" onClick={removeHandler}>\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {!isComplete && (\r\n          <div>\r\n            <hr />\r\n            <p className=\"mb-0\"> Time Remaining : {time}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n","import React from \"react\";\r\nimport Task from \"../Task/Task\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction TaskList() {\r\n  const tasks = useSelector((state) => state.tasks);\r\n  return (\r\n    <div className=\"card  \">\r\n      <div className=\"card-body task-list-container\">\r\n        {tasks.map((task, index) => (\r\n          <Task task={task} key={task.id} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskList;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useForm = (callback, validate) => {\r\n  const [values, setValues] = useState({ description: \"\", time: \"\" });\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(errors);\r\n    if (Object.keys(errors).length === 0 && isSubmitting) {\r\n      callback();\r\n    }\r\n  }, [errors]);\r\n\r\n  const handleSubmit = (event) => {\r\n    if (event) event.preventDefault();\r\n    console.log(\"submitted\");\r\n    setErrors(validate(values));\r\n    setIsSubmitting(true);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setValues((values) => ({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    }));\r\n    console.log(values);\r\n  };\r\n\r\n  return {\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    errors\r\n  };\r\n};\r\n\r\nexport default useForm;\r\n","export default function validate(values) {\r\n  let errors = {};\r\n  if (!values.description) {\r\n    errors.description = \"Description is required\";\r\n  }\r\n  if (!values.time) {\r\n    errors.time = \"Duration is required\";\r\n  }\r\n  return errors;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addItemTotask } from \"../../store/tasks.slice\";\r\nimport useForm from \"../../shared/useForm\";\r\nimport validate from \"../../shared/AddTaskFormValidationRules\";\r\n\r\nfunction AddTask() {\r\n  const dispatch = useDispatch();\r\n\r\n  function addTask() {\r\n    // console.log(errors);\r\n    dispatch(\r\n      addItemTotask({\r\n        ...values,\r\n        isComplete: false,\r\n        id: Math.random().toString(16).slice(2)\r\n      })\r\n    );\r\n    handleChange({ target: { value: \"\", name: \"description\" } });\r\n    handleChange({ target: { value: \"\", name: \"time\" } });\r\n  }\r\n\r\n  const { values, errors, handleChange, handleSubmit } = useForm(\r\n    addTask,\r\n    validate\r\n  );\r\n\r\n  return (\r\n    <div className=\"card add-task-container\">\r\n      <div className=\"card-body\">\r\n        <div>\r\n          <form className=\"needs-validation\" noValidate onSubmit={handleSubmit}>\r\n            <div className=\"form-row\">\r\n              <div className=\"col-md-6 mb-3\">\r\n                <label htmlFor=\"description\">Description</label>\r\n                <input\r\n                  id=\"description\"\r\n                  required\r\n                  type=\"text\"\r\n                  className={` form-control ${\r\n                    errors.description && \"in-valid\"\r\n                  }`}\r\n                  name=\"description\"\r\n                  placeholder=\"Description\"\r\n                  value={values.description}\r\n                  onChange={handleChange}\r\n                />\r\n                <div className=\"invalid-feedback\">\r\n                  {errors.description && (\r\n                    <p className=\"help is-danger\">{errors.description}</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-4 mb-3\">\r\n                <label htmlFor=\"description\">Duration</label>\r\n                <input\r\n                  id=\"time\"\r\n                  required\r\n                  type=\"number\"\r\n                  className={` form-control ${errors.time && \"in-valid\"}`}\r\n                  name=\"time\"\r\n                  placeholder=\"Duration\"\r\n                  value={values.time}\r\n                  onChange={handleChange}\r\n                />\r\n                <div className=\"invalid-feedback\">\r\n                  {errors.time && (\r\n                    <p className=\"help is-danger\">{errors.time}</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"col-md-2 mb-3 mg\">\r\n                <button type=\"submit\" className=\"btn btn-primary add-button\">\r\n                  Add\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTask;\r\n","import React from \"react\";\r\nimport TaskList from \"./components/Tasklist/TaskList\";\r\nimport AddTask from \"./components/Add-Task/AddTask\";\r\nimport \"./styles.css\";\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-7\">\r\n            <div className=\"card1\">\r\n              <div className=\"card-body1\">\r\n                <h3>Welcome to Medfit</h3>\r\n                <AddTask />\r\n                <TaskList />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport taskReducer from \"./tasks.slice\";\r\nexport const rootReducer = combineReducers({ tasks: taskReducer });\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport { rootReducer } from \"./rootReducer\";\r\n\r\nexport const store = configureStore({ reducer: rootReducer });\r\n","import { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport App from \"./App\";\r\nimport { store } from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}